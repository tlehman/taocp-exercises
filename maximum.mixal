* Program M (Find the maximum)
* from Knuth, TAOCP 1.3.2
*
* Algorithm A has five variables: m  (current maximum)
*				  k  (current index)
*				  n  (number of items in X)
*				  j  (index of current maximum in X)
*				  X  (array of numbers)
* 
* Program A uses four registers to implement the scalar variables:
* rA  = m
* rI1 = n
* rI2 = j
* rI3 = k

** 'Maximum' subroutine
X      	      EQU   1000	* memory cell containing X[1]
	      ORIG  3000	* start this program at cell 3000
MAXIMUM	      STJ   EXIT	* subroutine linkage
INIT	      ENT3  0,1		* k <- n
	      JMP   CHANGEM	* j <- n, m <- X[n], k <- n-1
LOOP	      CMPA  X,3		* M3. Compare
	      JGE   *+3		* To M5 if m >= X[k]
CHANGEM	      ENT2  0,3		* M4. Change m; j <- k
	      LDA   X,3		* m <- X[k]
	      DEC3  1		* M5. k <- k-1
	      J3P   LOOP	* M2. All tested? To M3 if k > 0
EXIT	      JMP   *		* return to main program

** Main program
MAX	EQU	3500	* location to store maximum
TERM	EQU	19	* output
START	ENT1 	5	* n <- 5
	LDX	=3=
	STX	X
	LDX	=2=
	STX	X+1
	LDX	=18=
	STX	X+2
	LDX	=1=
	STX	X+3
	LDX	=4=
	STX	X+4

	JMP	MAXIMUM
	CHAR	0		* Convert rA to character code		
	STX	MAX
	OUT	MAX(TERM)
	END	START


